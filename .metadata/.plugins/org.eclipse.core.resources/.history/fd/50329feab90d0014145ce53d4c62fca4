package RDFValidation.controller;

import java.util.List;
import javax.servlet.http.HttpServletResponse;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.SessionAttributes;
import org.springframework.web.servlet.ModelAndView;
import RDFValidation.ValidationEnvironment;

@Controller
@SessionAttributes( "validationEnvironment" )
@RequestMapping( value = "/dsp" )
public class DSPController
{
	// tab 0
	@RequestMapping( method = RequestMethod.GET )
	public ModelAndView landing( 
		@RequestParam( value = "sessionid", required = false ) 
		final String sessionId, final HttpServletResponse response )
	{
		ModelAndView model = new ModelAndView( "dsp", "link", "update" );

		if ( sessionId != null && sessionId.equals( "0" ) )
			response.setHeader( "SESSION_INVALID", "yes" );
		
		// initialize session variable
		model.addObject( "validationEnvironment", new ValidationEnvironment() );

		return model;
	}
	
	@RequestMapping( value = "/tab1", method = RequestMethod.POST )
	public ModelAndView namespaceDeclarations( /* tab2 get content via ajax*/
			@RequestParam( "namespaceDeclarations" ) String namespaceDeclarations, 
			@ModelAttribute( "validationEnvironment") ValidationEnvironment validationEnvironment ) 
	{
		ModelAndView model = new ModelAndView( "dsp-tab2", "link", "spss" );
		
		return model;
	}

	@RequestMapping( value = "/tab2", method = RequestMethod.POST )
	public ModelAndView constraints( 
			@RequestParam( "constraints" ) String constraints,
			@ModelAttribute( "validationEnvironment") ValidationEnvironment validationEnvironment ) 
	{
		ModelAndView model = new ModelAndView( "dsp-tab3", "link", "spss" );
		
		return model;
	}
	
	@RequestMapping( value = "/tab3", method = RequestMethod.POST )
	public ModelAndView data(
			@RequestParam( "data" ) String data,
			@ModelAttribute( "validationEnvironment") ValidationEnvironment validationEnvironment )
	{
		ModelAndView model = new ModelAndView( "dsp-tab4", "link", "spss" );

		return model;
	}
	
	@RequestMapping( value = "/tab4", method = RequestMethod.POST )
	public ModelAndView inferenceRules(
			@RequestParam( "inferenceRules" ) String inferenceRules,
			@ModelAttribute( "validationEnvironment") ValidationEnvironment validationEnvironment )
	{
		ModelAndView model = new ModelAndView( "dsp-tab5", "link", "spss" );
		model.addObject( "constraints", validationEnvironment.getConstraints() );

		return model;
	}	
}
